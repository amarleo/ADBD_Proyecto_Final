-- MySQL Script generated by MySQL Workbench
-- Fri Feb  4 11:50:43 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering


-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS  "mydb";

-- -----------------------------------------------------
-- Table "mydb"."LIBROS"
-- -----------------------------------------------------
DROP TABLE IF EXISTS "mydb"."LIBROS" CASCADE;

CREATE TABLE  "mydb"."LIBROS" (
  "ISBN" INT NOT NULL,
  "Título" VARCHAR(45) NOT NULL,
  "Autor" VARCHAR(45) NULL,
  "Género" VARCHAR(45) NULL,
  "Editorial" VARCHAR(45) NULL,
  "Precio" DOUBLE PRECISION NULL,
  "FechaPublicacion" DATE NULL,
  PRIMARY KEY ("ISBN"));


-- -----------------------------------------------------
-- Table "mydb"."CLIENTE"
-- -----------------------------------------------------
DROP TABLE IF EXISTS "mydb"."CLIENTE" CASCADE;

CREATE TABLE  "mydb"."CLIENTE" (
  "DNI" VARCHAR(45) NOT NULL,
  "NumContacto" INT NULL,
  "FechaNac" DATE NULL,
  "Nombre" VARCHAR(45) NOT NULL,
  "Dirección" VARCHAR(45) NULL,
  "LibrosExtraibles" INT NULL,
  PRIMARY KEY ("DNI"));


-- -----------------------------------------------------
-- Table "mydb"."EDICION"
-- -----------------------------------------------------
DROP TABLE IF EXISTS "mydb"."EDICION" CASCADE;

CREATE TABLE  "mydb"."EDICION" (
  "LIBROS_ISBN" INT NOT NULL,
  "NumEdicion" INT NOT NULL,
  "Stock" INT NOT NULL CHECK("Stock" >= 0),
  "CLIENTE_DNI_recibe" VARCHAR(45) NOT NULL,
  PRIMARY KEY ("LIBROS_ISBN", "NumEdicion"),
  CONSTRAINT "fk_table1_LIBROS"
    FOREIGN KEY ("LIBROS_ISBN")
    REFERENCES "mydb"."LIBROS" ("ISBN")
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT "fk_EDICION_CLIENTE1"
    FOREIGN KEY ("CLIENTE_DNI_recibe")
    REFERENCES "mydb"."CLIENTE" ("DNI")
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table "mydb"."DIGITAL"
-- -----------------------------------------------------
DROP TABLE IF EXISTS "mydb"."DIGITAL" CASCADE;

CREATE TABLE  "mydb"."DIGITAL" (
  "EDICION_LIBROS_ISBN" INT NOT NULL,
  "EDICION_NumEdicion" INT NOT NULL,
  "Valoracion" DOUBLE PRECISION NULL,
  "Opiniones" TEXT NULL,
  PRIMARY KEY ("EDICION_LIBROS_ISBN", "EDICION_NumEdicion"),
  CONSTRAINT "fk_table1_EDICION1"
    FOREIGN KEY ("EDICION_LIBROS_ISBN" , "EDICION_NumEdicion")
    REFERENCES "mydb"."EDICION" ("LIBROS_ISBN" , "NumEdicion")
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table "mydb"."FISICO"
-- -----------------------------------------------------
DROP TABLE IF EXISTS "mydb"."FISICO" CASCADE;

CREATE TABLE  "mydb"."FISICO" (
  "EDICION_LIBROS_ISBN" INT NOT NULL,
  "EDICION_NumEdicion" INT NOT NULL,
  PRIMARY KEY ("EDICION_LIBROS_ISBN", "EDICION_NumEdicion"),
  CONSTRAINT "fk_table1_EDICION2"
    FOREIGN KEY ("EDICION_LIBROS_ISBN" , "EDICION_NumEdicion")
    REFERENCES "mydb"."EDICION" ("LIBROS_ISBN" , "NumEdicion")
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table "mydb"."RESERVA"
-- -----------------------------------------------------
DROP TABLE IF EXISTS "mydb"."RESERVA" CASCADE;

CREATE TABLE  "mydb"."RESERVA" (
  "CLIENTE_DNI" VARCHAR(45) NOT NULL,
  "FISICO_EDICION_LIBROS_ISBN" INT NOT NULL,
  "EDICION_NumEdicion" INT NOT NULL,
  "ID" VARCHAR(45) NOT NULL,
  "FECHA_LIMITE" DATE NOT NULL CHECK("FECHA_LIMITE" >= current_date),
  PRIMARY KEY ("CLIENTE_DNI", "FISICO_EDICION_LIBROS_ISBN", "EDICION_NumEdicion", "ID"),
  CONSTRAINT "fk_CLIENTE_has_FISICO_CLIENTE2"
    FOREIGN KEY ("CLIENTE_DNI")
    REFERENCES "mydb"."CLIENTE" ("DNI")
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT "fk_CLIENTE_has_FISICO_FISICO2"
    FOREIGN KEY ("FISICO_EDICION_LIBROS_ISBN" , "EDICION_NumEdicion")
    REFERENCES "mydb"."FISICO" ("EDICION_LIBROS_ISBN" , "EDICION_NumEdicion")
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table "mydb"."EMPLEADO"
-- -----------------------------------------------------
DROP TABLE IF EXISTS "mydb"."EMPLEADO" CASCADE;

CREATE TABLE  "mydb"."EMPLEADO" (
  "DNI" VARCHAR(45) NOT NULL,
  "Nombre" VARCHAR(45) NOT NULL,
  "HFinal" TIME NULL,
  "HInicio" TIME NULL,
  "Salario" DOUBLE PRECISION NULL,
  "Jornada" VARCHAR(45) NULL,
  "Apellidos" VARCHAR(45) NULL,
  PRIMARY KEY ("DNI"));


-- -----------------------------------------------------
-- Table "mydb"."PEDIDO"
-- -----------------------------------------------------
DROP TABLE IF EXISTS "mydb"."PEDIDO" CASCADE;

CREATE TABLE  "mydb"."PEDIDO" (
  "ID" VARCHAR(45) NOT NULL,
  "CLIENTE_DNI" VARCHAR(45) NOT NULL,
  "EMPLEADO_DNI1" VARCHAR(45) NOT NULL,
  PRIMARY KEY ("ID", "CLIENTE_DNI"),
  CONSTRAINT "fk_PEDIDO_CLIENTE1"
    FOREIGN KEY ("CLIENTE_DNI")
    REFERENCES "mydb"."CLIENTE" ("DNI")
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT "fk_PEDIDO_EMPLEADO1"
    FOREIGN KEY ("EMPLEADO_DNI1")
    REFERENCES "mydb"."EMPLEADO" ("DNI")
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table "mydb"."PERTENECE"
-- -----------------------------------------------------
DROP TABLE IF EXISTS "mydb"."PERTENECE" CASCADE;

CREATE TABLE  "mydb"."PERTENECE" (
  "EDICION_LIBROS_ISBN" INT NOT NULL,
  "EDICION_NumEdicion" INT NOT NULL,
  "PEDIDO_ID" VARCHAR(45) NOT NULL,
  "PEDIDO_CLIENTE_DNI" VARCHAR(45) NOT NULL,
  PRIMARY KEY ("EDICION_LIBROS_ISBN", "EDICION_NumEdicion", "PEDIDO_ID", "PEDIDO_CLIENTE_DNI"),
  CONSTRAINT "fk_EDICION_has_PEDIDO_EDICION1"
    FOREIGN KEY ("EDICION_LIBROS_ISBN" , "EDICION_NumEdicion")
    REFERENCES "mydb"."EDICION" ("LIBROS_ISBN" , "NumEdicion")
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT "fk_EDICION_has_PEDIDO_PEDIDO1"
    FOREIGN KEY ("PEDIDO_ID" , "PEDIDO_CLIENTE_DNI")
    REFERENCES "mydb"."PEDIDO" ("ID" , "CLIENTE_DNI")
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table "mydb"."ENTREGA"
-- -----------------------------------------------------
DROP TABLE IF EXISTS "mydb"."ENTREGA" CASCADE;

CREATE TABLE  "mydb"."ENTREGA" (
  "CLIENTE_DNI" VARCHAR(45) NOT NULL,
  "EDICION_LIBROS_ISBN" INT NOT NULL,
  "EDICION_NumEdicion" INT NOT NULL,
  PRIMARY KEY ("CLIENTE_DNI", "EDICION_LIBROS_ISBN", "EDICION_NumEdicion"),
  CONSTRAINT "fk_CLIENTE_has_EDICION_CLIENTE1"
    FOREIGN KEY ("CLIENTE_DNI")
    REFERENCES "mydb"."CLIENTE" ("DNI")
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT "fk_CLIENTE_has_EDICION_EDICION1"
    FOREIGN KEY ("EDICION_LIBROS_ISBN" , "EDICION_NumEdicion")
    REFERENCES "mydb"."EDICION" ("LIBROS_ISBN" , "NumEdicion")
    ON DELETE CASCADE
    ON UPDATE CASCADE);

DROP TABLE IF EXISTS "mydb"."RECIBE" CASCADE;

CREATE TABLE  "mydb"."RECIBE" (
  "CLIENTE_DNI" VARCHAR(45) NOT NULL,
  "EDICION_LIBROS_ISBN" INT NOT NULL,
  "EDICION_NumEdicion" INT NOT NULL,
  PRIMARY KEY ("CLIENTE_DNI", "EDICION_LIBROS_ISBN", "EDICION_NumEdicion"),
  CONSTRAINT "fk_CLIENTE_has_EDICION_CLIENTE1"
    FOREIGN KEY ("CLIENTE_DNI")
    REFERENCES "mydb"."CLIENTE" ("DNI")
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT "fk_CLIENTE_has_EDICION_EDICION1"
    FOREIGN KEY ("EDICION_LIBROS_ISBN" , "EDICION_NumEdicion")
    REFERENCES "mydb"."EDICION" ("LIBROS_ISBN" , "NumEdicion")
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Funciones
-- -----------------------------------------------------
CREATE OR REPLACE FUNCTION actualizar_stock_edicion_entrega() RETURNS trigger AS $trigger_actualizar_stock_edicion_entrega$
    BEGIN
        UPDATE "mydb"."EDICION" SET
          "Stock" = "Stock" + 1
          WHERE NEW."EDICION_NumEdicion" = "mydb"."EDICION"."NumEdicion";
        UPDATE "mydb"."CLIENTE" SET
          "LibrosExtraibles" = "LibrosExtraibles" + 1
          WHERE NEW."CLIENTE_DNI" = "mydb"."CLIENTE"."DNI";
        RETURN NEW;
    END;
$trigger_actualizar_stock_edicion_entrega$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION actualizar_stock_edicion() RETURNS trigger AS $trigger_actualizar_stock_edicion$
    BEGIN
        IF (SELECT "mydb"."EDICION"."Stock" FROM "mydb"."EDICION" WHERE "mydb"."EDICION"."NumEdicion" = NEW."EDICION_NumEdicion") > 0 THEN
          UPDATE "mydb"."EDICION" SET
            "Stock" = "Stock" - 1
            WHERE NEW."EDICION_NumEdicion" = "mydb"."EDICION"."NumEdicion";
          RETURN NEW;
        ELSE
          RETURN 'ERR_NO_STOCK';
        END IF;
    END;
$trigger_actualizar_stock_edicion$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION actualizar_stock_edicion_recibe() RETURNS trigger AS $trigger_actualizar_stock_edicion_recibe$
    BEGIN
        IF (SELECT "mydb"."EDICION"."Stock" FROM "mydb"."EDICION" WHERE "mydb"."EDICION"."NumEdicion" = NEW."EDICION_NumEdicion") > 0
           AND (SELECT "mydb"."CLIENTE"."LibrosExtraibles" FROM "mydb"."CLIENTE" WHERE "mydb"."CLIENTE"."DNI" = NEW."CLIENTE_DNI") > 0 THEN
          UPDATE "mydb"."EDICION" SET
            "Stock" = "Stock" - 1
            WHERE NEW."EDICION_NumEdicion" = "mydb"."EDICION"."NumEdicion";
          UPDATE "mydb"."CLIENTE" SET
            "LibrosExtraibles" = "LibrosExtraibles" - 1
            WHERE NEW."CLIENTE_DNI" = "mydb"."CLIENTE"."DNI";
          RETURN NEW;
        ELSE
          RETURN 'ERR_NO_STOCK_OR_NO_NUM_RECEIVE';
        END IF;
    END;
$trigger_actualizar_stock_edicion_recibe$ LANGUAGE plpgsql;

/* CREATE OR REPLACE FUNCTION revisar_jornada() RETURNS trigger AS $trigger_revisar_jornada$
    BEGIN
      IF (SELECT "mydb"."EMPLEADO"."HFinal" FROM "mydb"."EMPLEADO" WHERE ("mydb"."EMPLEADO"."HFinal" <= SELECT TO_TIMESTAMP(now())) AND ("mydb"."EMPLEADO"."HInicio" <= SELECT TO_TIMESTAMP(now()))) > 0 THEN
        RETURN NEW;
      ELSE                                       -- no puedo
        RETURN 'ERR_NO_JORN_LABORAL';  
      END IF; 
    END;
$trigger_revisar_jornada$ LANGUAGE plpgsql; */


-- -----------------------------------------------------
-- Triggers
-- -----------------------------------------------------
CREATE TRIGGER trigger_actualizar_stock_edicion_entrega AFTER INSERT ON "mydb"."ENTREGA"
FOR EACH ROW EXECUTE PROCEDURE actualizar_stock_edicion_entrega();

CREATE TRIGGER trigger_actualizar_stock_edicion BEFORE INSERT ON "mydb"."RESERVA"
FOR EACH ROW EXECUTE PROCEDURE actualizar_stock_edicion();

CREATE TRIGGER trigger_actualizar_stock_edicion BEFORE INSERT ON "mydb"."PERTENECE"
FOR EACH ROW EXECUTE PROCEDURE actualizar_stock_edicion();

CREATE TRIGGER trigger_actualizar_stock_edicion_recibe BEFORE INSERT ON "mydb"."RECIBE"
FOR EACH ROW EXECUTE PROCEDURE actualizar_stock_edicion_recibe();

/* CREATE TRIGGER trigger_revisar_jornada BEFORE INSERT ON "mydb"."PERTENECE"
FOR EACH ROW EXECUTE PROCEDURE revisar_jornada(); */


-- -----------------------------------------------------
-- Data for table "mydb"."LIBROS"
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO "mydb"."LIBROS" ("ISBN", "Título", "Autor", "Género", "Editorial", "Precio", "FechaPublicacion") VALUES (1234, 'Harry Potter', 'J.K', 'Fantástico', 'Anónima', 14.5, '06/26/97');
INSERT INTO "mydb"."LIBROS" ("ISBN", "Título", "Autor", "Género", "Editorial", "Precio", "FechaPublicacion") VALUES (2468, 'Percy Jackson', 'Saúl', 'Acción', 'Santillana', 18.7, '05/07/14');
COMMIT;


-- -----------------------------------------------------
-- Data for table "mydb"."CLIENTE"
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO "mydb"."CLIENTE" ("DNI", "NumContacto", "FechaNac", "Nombre", "Dirección", "LibrosExtraibles") VALUES ('04576453', 696216394, '06/01/99', 'Sheyla', 'Avenida Pico Teide', 2);
INSERT INTO "mydb"."CLIENTE" ("DNI", "NumContacto", "FechaNac", "Nombre", "Dirección", "LibrosExtraibles") VALUES ('79063836', 652388638, '08/22/00', 'Anabel', 'Los Realejos', 1);
COMMIT;


-- -----------------------------------------------------
-- Data for table "mydb"."EDICION"
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO "mydb"."EDICION" ("LIBROS_ISBN", "NumEdicion", "Stock", "CLIENTE_DNI_recibe") VALUES (1234, 1, 10, '79063836');
INSERT INTO "mydb"."EDICION" ("LIBROS_ISBN", "NumEdicion", "Stock", "CLIENTE_DNI_recibe") VALUES (1234, 5, 30, '79063836');
INSERT INTO "mydb"."EDICION" ("LIBROS_ISBN", "NumEdicion", "Stock", "CLIENTE_DNI_recibe") VALUES (2468, 4, 15, '04576453');
COMMIT;


-- -----------------------------------------------------
-- Data for table "mydb"."DIGITAL"
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO "mydb"."DIGITAL" ("EDICION_LIBROS_ISBN", "EDICION_NumEdicion", "Valoracion", "Opiniones") VALUES (1234, 1, 10, 'Está muy bien');
INSERT INTO "mydb"."DIGITAL" ("EDICION_LIBROS_ISBN", "EDICION_NumEdicion", "Valoracion", "Opiniones") VALUES (2468, 4, 1, 'Es espantoso');
COMMIT;


-- -----------------------------------------------------
-- Data for table "mydb"."FISICO"
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO "mydb"."FISICO" ("EDICION_LIBROS_ISBN", "EDICION_NumEdicion") VALUES (1234, 5);
COMMIT;


-- -----------------------------------------------------
-- Data for table "mydb"."EMPLEADO"
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO "mydb"."EMPLEADO" ("DNI", "Nombre", "HFinal", "HInicio", "Salario", "Jornada", "Apellidos") VALUES ('78854723', 'Pepe', '19:00', '14:30', 15000, 'Completa', 'López');
COMMIT;

-- -----------------------------------------------------
-- Data for table "mydb"."PEDIDO"
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO "mydb"."PEDIDO" ("ID", "CLIENTE_DNI", "EMPLEADO_DNI1") VALUES ('1', '04576453', '78854723');
COMMIT;


-- -----------------------------------------------------
-- Data for table "mydb"."PERTENECE"
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO "mydb"."PERTENECE" ("EDICION_LIBROS_ISBN", "EDICION_NumEdicion", "PEDIDO_ID", "PEDIDO_CLIENTE_DNI") VALUES (2468, 4, '1', '04576453');
COMMIT;


-- -----------------------------------------------------
-- Data for table "mydb"."ENTREGA"
-- -----------------------------------------------------
INSERT INTO "mydb"."ENTREGA" ("CLIENTE_DNI", "EDICION_LIBROS_ISBN", "EDICION_NumEdicion") VALUES ('04576453', 2468, 4);


-- -----------------------------------------------------
-- Data for table "mydb"."RESERVA"
-- -----------------------------------------------------


-- -----------------------------------------------------
-- Pruebas
-- -----------------------------------------------------

SELECT * FROM "mydb"."EDICION";
START TRANSACTION;
INSERT INTO "mydb"."RESERVA" ("CLIENTE_DNI", "FISICO_EDICION_LIBROS_ISBN", "EDICION_NumEdicion", "ID", "FECHA_LIMITE") VALUES ('04576453', 1234, 5, '1', '02/05/22');
COMMIT;
SELECT * FROM "mydb"."EDICION";

SELECT * FROM "mydb"."CLIENTE";
SELECT * FROM "mydb"."EDICION";
START TRANSACTION;
INSERT INTO "mydb"."ENTREGA" ("CLIENTE_DNI", "EDICION_LIBROS_ISBN", "EDICION_NumEdicion") VALUES ('04576453', 1234, 1);
COMMIT;
SELECT * FROM "mydb"."CLIENTE";
SELECT * FROM "mydb"."EDICION";

SELECT * FROM "mydb"."CLIENTE";
SELECT * FROM "mydb"."EDICION";
START TRANSACTION;
INSERT INTO "mydb"."RECIBE" ("CLIENTE_DNI", "EDICION_LIBROS_ISBN", "EDICION_NumEdicion") VALUES ('04576453', 1234, 1);
COMMIT;
SELECT * FROM "mydb"."EDICION";
SELECT * FROM "mydb"."CLIENTE";

SELECT * FROM "mydb"."EDICION";

START TRANSACTION;
INSERT INTO "mydb"."PERTENECE" ("EDICION_LIBROS_ISBN", "EDICION_NumEdicion", "PEDIDO_ID", "PEDIDO_CLIENTE_DNI") VALUES (1234, 5, '1', '04576453');
COMMIT; 
SELECT * FROM "mydb"."EDICION";

SELECT * FROM "mydb"."EMPLEADO";
SELECT * FROM "mydb"."PERTENECE";
SELECT * FROM "mydb"."RECIBE";
SELECT * FROM "mydb"."RESERVA";
SELECT * FROM "mydb"."PEDIDO";
SELECT * FROM "mydb"."FISICO";
SELECT * FROM "mydb"."DIGITAL";
SELECT * FROM "mydb"."LIBROS";
